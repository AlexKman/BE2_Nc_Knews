{
  "GET /api/topics": "Responds with an array of topic objects",
  "POST /api/topics/": "Accepts object containing unique slug and desciption property, responds with posted object",
  "GET /api/topics/:topic/articles": "Responds with array of articles for a given topic",
  "POST /api/topics/:topic/articles": "Accepts object containing a title, body and username property, responds with posted article",
  "GET /api/articles": "Responds with an array of article objects",
  "GET /api/articles/:article_id": "Responds with an article object for a given article_id",
  "PATCH /api/articles/:article_id": "Accepts an object in the form  { inc_votes : newVote }, responds with updated article object",
  "DELETE /api/articles/:article_id": "Deletes given article by article_id, responds with 204 and no content",
  "GET /api/articles/:article_id/comments": "Responds with an array of comments for the given article_id",
  "POST /api/articles/:article_id/comments": "Accepts an object with a body and username property, responds with the posted comment object",
  "PATCH /api/articles/:article_id/comments/:comment_id": "Accepts an object in the form  { inc_votes : newVote }, responds with updated comment",
  "DELETE /api/articles/:article_id/comments/:comment_id": "Deletes given comment by comment_id, responds with 204 and no content",
  "GET /api/users": "Responds with an array of user objects",
  "GET /api/users/username": "Responds with a user object for a given username"
}
